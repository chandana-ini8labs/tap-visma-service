[project]
name = "tap-visma-service"
version = "0.0.1"
description = "Singer tap for VismaService, built with the Meltano Singer SDK."
readme = "README.md"
authors = [{ name = "Chandana S", email = "chandan@ini8labs.tech" }]
keywords = [
    "ELT",
    "VismaService",
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
license = "Apache-2.0"
license-files = [ "LICENSE" ]
requires-python = ">=3.10"
dependencies = [
    "singer-sdk~=0.49.1",
    "requests~=2.32.3",
    "typing-extensions>=4.5.0; python_version < '3.13'",
]

[project.optional-dependencies]
s3 = [
    "s3fs~=2025.7.0",
]

[project.scripts]
# CLI declaration
tap-visma-service = 'tap_visma_service.tap:TapVismaService.cli'

[dependency-groups]
dev = [
    { include-group = "test" },
]
test = [
    "pytest>=8",
    "singer-sdk[testing]",
]
typing = [
    "mypy>=1.16.0",
    "ty>=0.0.1-alpha.16",
    "types-requests",
]

[tool.pytest.ini_options]
addopts = [
    "--durations=10",
]

[tool.mypy]
warn_unused_configs = true

[tool.ruff]
line-length = 100
required-version = ">=0.13"

[tool.ruff.lint]
future-annotations = true
ignore = [
    "COM812",  # missing-trailing-comma
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = [
    "hatchling>=1,<2",
]
build-backend = "hatchling.build"

# This configuration can be used to customize tox tests as well as other test frameworks like flake8 and mypy
[tool.tox]
min_version = "4.22"
requires = [
    "tox>=4.22",
    "tox-uv",
]
env_list = [
    "typing",
    "py314",
    "py313",
    "py312",
    "py311",
    "py310",
]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
pass_env = [
    "TAP_VISMA_SERVICE_*",
]
dependency_groups = [ "test" ]
commands = [ [ "pytest", { replace = "posargs", default = [ "tests" ], extend = true } ] ]

[tool.tox.env.typing]
dependency_groups = [ "test", "typing" ]
commands = [
    [ "mypy", { replace = "posargs", default = [ "tap_visma_service", "tests" ], extend = true } ],
    [ "ty", "check", { replace = "posargs", default = [ "tap_visma_service", "tests" ], extend = true } ],
]
